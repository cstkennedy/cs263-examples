<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="631px" preserveAspectRatio="none" style="width:554px;height:631px;" version="1.1" viewBox="0 0 554 631" width="554px" zoomAndPan="magnify"><defs><filter height="300%" id="fbrv9eny5mhzy" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--class Board--><rect fill="#FEFECE" filter="url(#fbrv9eny5mhzy)" height="158.6875" id="Board" style="stroke: #A80036; stroke-width: 1.5;" width="266" x="6" y="84"/><ellipse cx="118.25" cy="100" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M121.0156,95.875 Q121.1719,95.6563 121.3594,95.5469 Q121.5469,95.4375 121.7656,95.4375 Q122.1406,95.4375 122.375,95.6953 Q122.6094,95.9531 122.6094,96.5625 L122.6094,98.0156 Q122.6094,98.625 122.375,98.8906 Q122.1406,99.1563 121.7656,99.1563 Q121.4219,99.1563 121.2188,98.9531 Q121.0156,98.7656 120.9063,98.25 Q120.8594,97.8906 120.6719,97.7031 Q120.3438,97.3281 119.7344,97.1094 Q119.125,96.8906 118.5,96.8906 Q117.7344,96.8906 117.1016,97.2188 Q116.4688,97.5469 115.9766,98.2969 Q115.4844,99.0469 115.4844,100.0781 L115.4844,101.1719 Q115.4844,102.4063 116.375,103.2266 Q117.2656,104.0469 118.8594,104.0469 Q119.7969,104.0469 120.4531,103.7969 Q120.8438,103.6406 121.2656,103.2031 Q121.5313,102.9375 121.6797,102.8594 Q121.8281,102.7813 122.0313,102.7813 Q122.3594,102.7813 122.6172,103.0391 Q122.875,103.2969 122.875,103.6406 Q122.875,103.9844 122.5313,104.3906 Q122.0313,104.9688 121.2344,105.2969 Q120.1563,105.75 118.8594,105.75 Q117.3438,105.75 116.1406,105.125 Q115.1563,104.625 114.4688,103.5547 Q113.7813,102.4844 113.7813,101.2031 L113.7813,100.0469 Q113.7813,98.7188 114.3984,97.5703 Q115.0156,96.4219 116.1094,95.8047 Q117.2031,95.1875 118.4375,95.1875 Q119.1719,95.1875 119.8203,95.3516 Q120.4688,95.5156 121.0156,95.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="33" x="138.75" y="104.9102">Board</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="271" y1="116" y2="116"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="12" y="131.4189">-theBoard : std::array&lt;CellValue, 9&gt;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="12" y="145.2549">+CellTriple : using</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="271" y1="151.6719" y2="151.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="12" y="167.0908">+Board()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="12" y="180.9268">+get3Cells(int cell1Id, int cell2Id, int cell3Id) : CellTriple</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="12" y="194.7627">+getCell(int id) : CellValue</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="12" y="208.5986">+isFull() : bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="12" y="222.4346">+display(std::ostream&amp; outs) : void</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="12" y="236.2705">+setCell(int id, CellValue newValue) : void</text><!--class Game--><rect fill="#FEFECE" filter="url(#fbrv9eny5mhzy)" height="310.8828" id="Game" style="stroke: #A80036; stroke-width: 1.5;" width="173" x="307.5" y="8"/><ellipse cx="372.75" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M375.5156,19.875 Q375.6719,19.6563 375.8594,19.5469 Q376.0469,19.4375 376.2656,19.4375 Q376.6406,19.4375 376.875,19.6953 Q377.1094,19.9531 377.1094,20.5625 L377.1094,22.0156 Q377.1094,22.625 376.875,22.8906 Q376.6406,23.1563 376.2656,23.1563 Q375.9219,23.1563 375.7188,22.9531 Q375.5156,22.7656 375.4063,22.25 Q375.3594,21.8906 375.1719,21.7031 Q374.8438,21.3281 374.2344,21.1094 Q373.625,20.8906 373,20.8906 Q372.2344,20.8906 371.6016,21.2188 Q370.9688,21.5469 370.4766,22.2969 Q369.9844,23.0469 369.9844,24.0781 L369.9844,25.1719 Q369.9844,26.4063 370.875,27.2266 Q371.7656,28.0469 373.3594,28.0469 Q374.2969,28.0469 374.9531,27.7969 Q375.3438,27.6406 375.7656,27.2031 Q376.0313,26.9375 376.1797,26.8594 Q376.3281,26.7813 376.5313,26.7813 Q376.8594,26.7813 377.1172,27.0391 Q377.375,27.2969 377.375,27.6406 Q377.375,27.9844 377.0313,28.3906 Q376.5313,28.9688 375.7344,29.2969 Q374.6563,29.75 373.3594,29.75 Q371.8438,29.75 370.6406,29.125 Q369.6563,28.625 368.9688,27.5547 Q368.2813,26.4844 368.2813,25.2031 L368.2813,24.0469 Q368.2813,22.7188 368.8984,21.5703 Q369.5156,20.4219 370.6094,19.8047 Q371.7031,19.1875 372.9375,19.1875 Q373.6719,19.1875 374.3203,19.3516 Q374.9688,19.5156 375.5156,19.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="34" x="393.25" y="28.9102">Game</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="308.5" x2="479.5" y1="40" y2="40"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="313.5" y="55.4189">-board : Board</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="313.5" y="69.2549">-player1 : Player&amp;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="313.5" y="83.0908">-player2 : Player&amp;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="313.5" y="96.9268">-winner : Player*</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="313.5" y="110.7627">-ref : Referee</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="313.5" y="124.5986">-numMovesMade : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="308.5" x2="479.5" y1="131.0156" y2="131.0156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="313.5" y="146.4346">+Game()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="313.5" y="160.2705">+Game(Player&amp; p1, Player&amp; p2)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="313.5" y="174.1064">+getBoard() : Board&amp;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="313.5" y="187.9424">+getLoser() : Player&amp;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="313.5" y="201.7783">+getPlayer1() : Player&amp;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="313.5" y="215.6143">+getPlayer2() : Player&amp;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="313.5" y="229.4502">+getWinner() : Player&amp;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="313.5" y="243.2861">+endedWithStalemate() : bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="313.5" y="257.1221">+endedWithWin() : bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="313.5" y="270.958">+isNotOver() : bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="313.5" y="284.7939">+isOver() : bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="313.5" y="298.6299">+playRound() : bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="313.5" y="312.4658">-roundTurn(Player&amp; player) : bool</text><!--class Game::Referee--><rect fill="#FEFECE" filter="url(#fbrv9eny5mhzy)" height="186.3594" id="Game::Referee" style="stroke: #A80036; stroke-width: 1.5;" width="261" x="8.5" y="407"/><ellipse cx="92.75" cy="423" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M95.5156,418.875 Q95.6719,418.6563 95.8594,418.5469 Q96.0469,418.4375 96.2656,418.4375 Q96.6406,418.4375 96.875,418.6953 Q97.1094,418.9531 97.1094,419.5625 L97.1094,421.0156 Q97.1094,421.625 96.875,421.8906 Q96.6406,422.1563 96.2656,422.1563 Q95.9219,422.1563 95.7188,421.9531 Q95.5156,421.7656 95.4063,421.25 Q95.3594,420.8906 95.1719,420.7031 Q94.8438,420.3281 94.2344,420.1094 Q93.625,419.8906 93,419.8906 Q92.2344,419.8906 91.6016,420.2188 Q90.9688,420.5469 90.4766,421.2969 Q89.9844,422.0469 89.9844,423.0781 L89.9844,424.1719 Q89.9844,425.4063 90.875,426.2266 Q91.7656,427.0469 93.3594,427.0469 Q94.2969,427.0469 94.9531,426.7969 Q95.3438,426.6406 95.7656,426.2031 Q96.0313,425.9375 96.1797,425.8594 Q96.3281,425.7813 96.5313,425.7813 Q96.8594,425.7813 97.1172,426.0391 Q97.375,426.2969 97.375,426.6406 Q97.375,426.9844 97.0313,427.3906 Q96.5313,427.9688 95.7344,428.2969 Q94.6563,428.75 93.3594,428.75 Q91.8438,428.75 90.6406,428.125 Q89.6563,427.625 88.9688,426.5547 Q88.2813,425.4844 88.2813,424.2031 L88.2813,423.0469 Q88.2813,421.7188 88.8984,420.5703 Q89.5156,419.4219 90.6094,418.8047 Q91.7031,418.1875 92.9375,418.1875 Q93.6719,418.1875 94.3203,418.3516 Q94.9688,418.5156 95.5156,418.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="84" x="113.25" y="427.9102">Game::Referee</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9.5" x2="268.5" y1="439" y2="439"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="14.5" y="454.4189">-boardRef : const Board&amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="9.5" x2="268.5" y1="460.8359" y2="460.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="14.5" y="476.2549">+Referee()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="14.5" y="490.0908">+Referee(const Board&amp; b)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="14.5" y="503.9268">-allThreeMatch(const Board::CellTriple&amp; triple) : bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="14.5" y="517.7627">+selectedCellIsEmpty(int move) : bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="14.5" y="531.5986">-checkForDiagonalWin() : int</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="14.5" y="545.4346">-checkForHorizontalWin() : int</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="14.5" y="559.2705">-checkForVerticalWin() : int</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="14.5" y="573.1064">+checkForWin() : int</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="14.5" y="586.9424">-playerNumFromSymbol(char sym) : int</text><!--class Player--><rect fill="#FEFECE" filter="url(#fbrv9eny5mhzy)" height="241.7031" id="Player" style="stroke: #A80036; stroke-width: 1.5;" width="238" x="305" y="379"/><ellipse cx="402.75" cy="395" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M405.5156,390.875 Q405.6719,390.6563 405.8594,390.5469 Q406.0469,390.4375 406.2656,390.4375 Q406.6406,390.4375 406.875,390.6953 Q407.1094,390.9531 407.1094,391.5625 L407.1094,393.0156 Q407.1094,393.625 406.875,393.8906 Q406.6406,394.1563 406.2656,394.1563 Q405.9219,394.1563 405.7188,393.9531 Q405.5156,393.7656 405.4063,393.25 Q405.3594,392.8906 405.1719,392.7031 Q404.8438,392.3281 404.2344,392.1094 Q403.625,391.8906 403,391.8906 Q402.2344,391.8906 401.6016,392.2188 Q400.9688,392.5469 400.4766,393.2969 Q399.9844,394.0469 399.9844,395.0781 L399.9844,396.1719 Q399.9844,397.4063 400.875,398.2266 Q401.7656,399.0469 403.3594,399.0469 Q404.2969,399.0469 404.9531,398.7969 Q405.3438,398.6406 405.7656,398.2031 Q406.0313,397.9375 406.1797,397.8594 Q406.3281,397.7813 406.5313,397.7813 Q406.8594,397.7813 407.1172,398.0391 Q407.375,398.2969 407.375,398.6406 Q407.375,398.9844 407.0313,399.3906 Q406.5313,399.9688 405.7344,400.2969 Q404.6563,400.75 403.3594,400.75 Q401.8438,400.75 400.6406,400.125 Q399.6563,399.625 398.9688,398.5547 Q398.2813,397.4844 398.2813,396.2031 L398.2813,395.0469 Q398.2813,393.7188 398.8984,392.5703 Q399.5156,391.4219 400.6094,390.8047 Q401.7031,390.1875 402.9375,390.1875 Q403.6719,390.1875 404.3203,390.3516 Q404.9688,390.5156 405.5156,390.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="34" x="423.25" y="399.9102">Player</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="306" x2="542" y1="411" y2="411"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="311" y="426.4189">-symbol : char</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="150" x="311" y="440.2549">+referenceCylon : const Player</text><line style="stroke: #000000; stroke-width: 1.0;" x1="311" x2="461" y1="442.2549" y2="442.2549"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="131" x="311" y="454.0908">-PROMPT_MSG : std::string</text><line style="stroke: #000000; stroke-width: 1.0;" x1="311" x2="442" y1="456.0908" y2="456.0908"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="311" y="467.9268">-name : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="306" x2="542" y1="474.3438" y2="474.3438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44" x="311" y="489.7627">+Player()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="311" y="503.5986">+Player(std::string n)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="311" y="517.4346">+isComputer() : bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="226" x="311" y="531.2705">+isGeneric(const Player&amp; possibleCylon) : bool</text><line style="stroke: #000000; stroke-width: 1.0;" x1="311" x2="537" y1="533.2705" y2="533.2705"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="311" y="545.1064">+isHuman() : bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="311" y="558.9424">+getSymbol() : char</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="311" y="572.7783">+nextMove() : int</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="311" y="586.6143">+getName() : std::string</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="311" y="600.4502">+setName(std::string n) : void</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="311" y="614.2861">+setSymbol(char newSymbol) : void</text><!--link Board to Game--><!--link Board to Game::Referee--><!--link Game::Referee to Player--><!--
@startuml
skinparam classAttributeIconSize 0
hide empty members

class Board {
	+Board()
	+get3Cells(int cell1Id, int cell2Id, int cell3Id) : CellTriple
	+getCell(int id) : CellValue
	+isFull() : bool
	-theBoard : std::array<CellValue, 9>
	+CellTriple : using
	+display(std::ostream& outs) : void
	+setCell(int id, CellValue newValue) : void
}

class Game {
	+Game()
	+Game(Player& p1, Player& p2)
	-board : Board
	+getBoard() : Board&
	+getLoser() : Player&
	+getPlayer1() : Player&
	+getPlayer2() : Player&
	+getWinner() : Player&
	-player1 : Player&
	-player2 : Player&
	-winner : Player*
	-ref : Referee
	+endedWithStalemate() : bool
	+endedWithWin() : bool
	+isNotOver() : bool
	+isOver() : bool
	+playRound() : bool
	-roundTurn(Player& player) : bool
	-numMovesMade : int
}


class Game::Referee {
	+Referee()
	+Referee(const Board& b)
	-allThreeMatch(const Board::CellTriple& triple) : bool
	+selectedCellIsEmpty(int move) : bool
	-boardRef : const Board&
	-checkForDiagonalWin() : int
	-checkForHorizontalWin() : int
	-checkForVerticalWin() : int
	+checkForWin() : int
	-playerNumFromSymbol(char sym) : int
}


class Player {
	+Player()
	+Player(std::string n)
	+isComputer() : bool
	+{static} isGeneric(const Player& possibleCylon) : bool
	+isHuman() : bool
	+getSymbol() : char
	-symbol : char
	+nextMove() : int
	+{static} referenceCylon : const Player
	-{static} PROMPT_MSG : std::string
	+getName() : std::string
	-name : std::string
	+setName(std::string n) : void
	+setSymbol(char newSymbol) : void
}



@enduml

PlantUML version 1.2018.12(Sun Oct 21 06:15:15 EDT 2018)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 1.8.0_172-b11
Operating System: Windows 10
OS Version: 10.0
Default Encoding: Cp1252
Language: en
Country: US
--></g></svg>